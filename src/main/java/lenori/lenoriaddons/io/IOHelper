package lenori.lenoriaddons.io

public class IOHelper {

  public static <T, K> MapStream<T, K> readMap(CompoundTag tag, String name, BiFunction<CompoundTag, String, T> keyMapper, BiFunction<CompoundTag, String, K> valueMapper) {
      HashMap<T, K> map = new HashMap<>();
      readCompoundList(tag, name)
        .forEach(tag1 -> map.put(keyMapper.apply(tag1, "Key"), valueMapper.apply(tag1, "Value")));
      return MapStream.of(map);
  }

  public static Stream<CompoundTag> readCompoundList(CompoundTag tag, String name) {
      return readList(tag, name, CompoundTag.class, 10);
  }
  
  public static <T> Stream<T> readList(CompoundTag tag, String name, Class<T> targetId, int elementId) {
      ListTag listTag = tag.getList(name, elementId);
      return listTag.stream().filter(targetId::isInstance)
        .map(targetId::cast);
  }
}
